repositories {
    maven {
        name 'LDTTeam - Modding'
        url 'https://ldtteam.jfrog.io/ldtteam/modding/'
    }
}

subprojects { it ->
    if (!it.getChildProjects().isEmpty())
        return;

    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    jar {
        manifest {
            attributes([
                    'Specification-Title'     : mod_name,
                    'Specification-Vendor'    : mod_author,
                    'Specification-Version'   : project.jar.archiveVersion,
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : project.jar.archiveVersion,
                    'Implementation-Vendor'   : mod_author,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Timestampe'              : System.currentTimeMillis(),
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Build-On-Minecraft'      : minecraft_version
            ])
        }
    }

    repositories {

        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }
    }

    dependencies {
        // unit testing
        testImplementation 'junit:junit:4.11'
        testImplementation "org.mockito:mockito-core:1.+"
        testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.5'
        testImplementation group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.5'
        testImplementation group: 'org.powermock', name: 'powermock-module-junit4-rule-agent', version: '1.6.5'
        testImplementation 'org.assertj:assertj-core:3.9.0'
        testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
        testImplementation group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.21'
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    tasks.withType(Javadoc.class, {task ->
        task.options.tags(
                'apiNote:a:API Note:',
                'implSpec:a:Implementation Requirements:',
                'implNote:a:Implementation Note:',
                'reason:a:The reason for adding an @Overwrite'
        )
    })
}
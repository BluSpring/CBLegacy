plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
}

sourceCompatibility = targetCompatibility = "17" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "17"
}

group= "mod.chiselsandbits"
archivesBaseName = "chiselsandbits"
if (System.getenv().BUILD_NUMBER != null) {//adds the build number to the end of the version string if on a build server
    project.version += ".${System.getenv().BUILD_NUMBER}"
}

repositories {
    mavenCentral()
	maven { url "https://maven.blamejared.com/" }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup("maven.modrinth")
        }
    }

    maven { url = "https://mvn.devos.one/snapshots/" }
    maven {
        name 'JitPack'
        url 'https://jitpack.io/'
    }

    maven {
        name 'Cafeteria Dev'
        url 'https://maven.cafeteria.dev/releases/'
        content {
            includeGroup 'dev.cafeteria'
        }
    }

    maven {
        name 'JamiesWhiteShirt Dev'
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }

    maven {
        name "Fuzs Mod Resources"
        url "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${mc_version}"
    mappings loom.officialMojangMappings()

    implementation "com.google.code.findbugs:jsr305:3.0.0"

    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:1.9.4+kotlin.1.8.21"

    modCompileOnlyApi("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    modCompileOnlyApi("mezz.jei:jei-${mc_version}-fabric-api:${jei_version}")
    // at runtime, use the full JEI jar for Fabric
    modRuntimeOnly("mezz.jei:jei-${mc_version}-fabric:${jei_version}")

    modImplementation(include("io.github.fabricators_of_create.Porting-Lib:porting-lib:2.1.875+1.19.2"))

    // Runtime mods for testing
    modRuntimeOnly ("maven.modrinth:ferrite-core:5.0.3-fabric")
    modRuntimeOnly ("maven.modrinth:lazydfu:0.1.3")
    modRuntimeOnly ("maven.modrinth:sodium:mc1.19.2-0.4.4")
    modRuntimeOnly ("maven.modrinth:lithium:mc1.19.2-0.11.1")
    modRuntimeOnly ("maven.modrinth:starlight:1.1.1+1.19")
    modRuntimeOnly ("maven.modrinth:indium:1.0.9+mc1.19.2")

    runtimeOnly ("org.joml:joml:1.10.4")
}

task apiJar(type: Jar) {
    from sourceSets.main.java
    include "mod/chiselsandbits/api/**"

    from sourceSets.main.output
    include "mod/chiselsandbits/api/**"

    classifier = 'api'
}
// prevent java 8's strict doclint for javadocs from failing builds
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }

jar {
	manifest {
		attributes 'FMLAT': 'chiselsandbits_at.cfg'
	}
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

artifacts {
   archives javadocJar
   archives sourcesJar
   archives apiJar
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
        expand "mc_version": project.mc_version
    }
}